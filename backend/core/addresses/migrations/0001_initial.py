# Generated by Django 5.2.4 on 2025-07-29 13:43

import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_order', models.PositiveIntegerField(default=1, help_text='Display order (lower numbers - zero included - appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this should be displayed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(help_text='Email address (e.g., user@example.com)', max_length=254, unique=True)),
                ('is_primary', models.BooleanField(default=False, help_text='Mark as email address to be used in contact forms. If is_active is False, this will be ignored.')),
            ],
            options={
                'verbose_name_plural': 'Email Addresses',
                'ordering': ['display_order', 'email'],
            },
        ),
        migrations.CreateModel(
            name='PhoneAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_order', models.PositiveIntegerField(default=1, help_text='Display order (lower numbers - zero included - appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this should be displayed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', phonenumber_field.modelfields.PhoneNumberField(help_text='Phone number (e.g., +254712345678 or 0712345678)', max_length=128, region='KE', unique=True)),
                ('is_primary', models.BooleanField(default=False, help_text='Mark as primary phone number. If is_active is False, this will be ignored.')),
                ('use_for_whatsapp', models.BooleanField(default=False, help_text='Whether this phone number should be used for WhatsApp. If is_active is False, this will be ignored.')),
            ],
            options={
                'verbose_name_plural': 'Phone Addresses',
                'ordering': ['display_order', 'number'],
            },
        ),
        migrations.CreateModel(
            name='PhysicalAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_order', models.PositiveIntegerField(default=1, help_text='Display order (lower numbers - zero included - appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this should be displayed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('label', models.CharField(help_text='Custom label for this address e.g Main Office Address', max_length=100, unique=True)),
                ('building', models.CharField(blank=True, help_text='Building name or number (e.g., Britam Tower, Block A)', max_length=100)),
                ('street_address', models.CharField(blank=True, help_text='Street address including house number and street name', max_length=255)),
                ('city', models.CharField(blank=True, help_text='City name', max_length=100)),
                ('state_province', models.CharField(blank=True, help_text='State, province, or county (e.g., Vihiga County)', max_length=100)),
                ('postal_code', models.CharField(blank=True, help_text='ZIP code, postal code, or equivalent', max_length=20)),
                ('country', models.CharField(blank=True, default='Kenya', help_text='Country name', max_length=100)),
                ('map_embed_url', models.URLField(blank=True, help_text='Google Maps/Other map provider embed URL for displaying in iframes', max_length=500)),
                ('use_in_contact_form', models.BooleanField(default=False, help_text='Mark this as the address to use in contact forms and maps. Only one active address can be selected.')),
            ],
            options={
                'verbose_name_plural': 'Physical Addresses',
                'ordering': ['display_order', 'label', 'city'],
            },
        ),
        migrations.CreateModel(
            name='SocialMediaAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_order', models.PositiveIntegerField(default=1, help_text='Display order (lower numbers - zero included - appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this should be displayed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'X (formerly Twitter)'), ('instagram', 'Instagram'), ('linkedin', 'LinkedIn'), ('youtube', 'YouTube'), ('tiktok', 'TikTok'), ('pinterest', 'Pinterest'), ('snapchat', 'Snapchat'), ('discord', 'Discord'), ('telegram', 'Telegram'), ('github', 'GitHub'), ('reddit', 'Reddit'), ('twitch', 'Twitch')], max_length=20, unique=True)),
                ('icon', models.CharField(blank=True, editable=False, help_text='Bootstrap icon class (auto-populated based on name)', max_length=50)),
                ('url', models.URLField(help_text='URL to your selected social media profile')),
            ],
            options={
                'verbose_name_plural': 'Social Media Addresses',
                'ordering': ['display_order', 'name'],
            },
        ),
    ]
